#version 330 core

layout(location = 0) in vec3 pos;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 uv;

struct clight_t {
	vec4	pos;
	vec4	color;
};

layout (std140) uniform block {
	mat4	model;
	mat4	transform;

	bool dead;

	clight_t	lights[48];
};

out vec2 vs_uv;
out vec3 vs_normal;
out vec3 vs_fragpos;

void main() {
	vs_uv = uv;
	vs_normal = mat3(transpose(inverse(model))) * normal;
	vs_fragpos	= vec3(model * vec4(pos, 1.0));
	gl_Position	= transform * vec4(pos, 1.0);
}
